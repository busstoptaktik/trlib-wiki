== (KMS) TrLib ==

Welcome to this first version of the TrLib wiki. 
Hopefully lots of useful information will eventually find its way here.

=== Other pages with documentation ===

* [[Programming_guide|Programming guide.]]
* [[mini_labels|A description of MiniLabels.]]
* [[Bindings|Bindings to high level languages.]]

=== Notes on release ===

We plan to release a new version of trlib around the first of May 2013.

See the [[Release_news|Release news page.]]

Precompiled binaries for windows and updated geoid library for the previous release 1.01 are available for download from the [[ftp://ftp.kms.dk/download/transformationsprogram/|GST ftp server]].

Links to the ftp server will also be available (soon) from [[http://www.gst.dk/Emner/Referencenet/Koordinattransformation/| the GST wbesite for coordinate transformation]].


=== Build procedures ===

A makefile for linux (gcc) has been added to the root directory. Alternatively you can use [[http://www.cmake.org|cmake]] to generate makefiles or project-files specific to your system. This uses the CMakeLists.txt files in the root-dir and in the TR_SRC dir to build a shared library. For example:
# Make a directory BUILD at the same level as trlib. Then cd to that directory.
# Run cmake ../trlib - this will generate makefiles/project files, which defaults to whatever compiler you have on your system (Visual Studio, gcc etc.)
# You can also specify the target compiler suite by using the -G switch: cmake -G <generator> ../trlib 
=== Mini Labels ===

(KMS)TrLib uses the (famous) mini label system for specification of projection/reference system metadata. See the [[mini labels|MiniLabels page]] for an introduction. We plan to implement translation procedures between MiniLabels and other, more widespread, metadata systems such as ogc-wkt and EPGS-codes. A translation from MiniLabels to ESRI-flavoured wkt is already implemented in the core and exposed in the python bindings.

=== Supported systems ===

We have been able to compile and test the code on the following systems:
* Windows XP (Servicepack 3): MINGW (gcc 4.5.2), Visual Studio 2010
* Windows Server 2008 (64 bit): MINGW (gcc 4.5.2), Visual Studio 2010 (cross compiled from WinXP)
* Ubuntu 10.10 (32 bit, i686): gcc 4.4.5
* Ubuntu 10.10 (64 bit, x86_64): gcc 4.4.5
* SunOS (Sparc): Sun C 5.9

=== Tested, but not really supported ===

* Mac OS X, Snow Leopard: gcc 4.2 (**only in single threaded mode**), gcc 4.6 (multithreaded).

=== Definition files ===

The library needs the definition file //def_lab.txt// in order to be able to run. To be able to perform 3d-transformations a geoid library is also needed. Definition file(s) and geoid library will be distributed on releases. You can also contact <<user silyko>> if you need an up to date geoid library for testing etc.

===Auto tests===

A rudimentary test suite has been implemented in python (available in the python folder). The auto tests can be invoked like this:

*{{{python path_to_repo/python/AutoTest.py <shared_library_object> <Geoid_folder>}}}

For example, on windows:

*{{{python trlib\python\AutoTest.py NewlyCompiledTrLib.dll C:\Geoids}}}